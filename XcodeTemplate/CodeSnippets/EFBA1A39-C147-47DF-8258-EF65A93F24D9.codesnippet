<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>cld</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>    // MARK: collectionView 数据源
    
    // MARK: cell数量
    /*
    override func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -&gt; Int{
        // 父类已设置为dataSource.count，如需修改请，重写此方法，但要注意cellFor里面DataSource[indexPath.row]越界
        return dataSource.count
    }
    */
    
    // section数量
    func numberOfSections(in collectionView: UICollectionView) -&gt; Int{
        return &lt;#T##2#&gt;
    }
    
    // cell大小
    override func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -&gt; CGSize{
        
        var widthForCell: CGFloat = 88.0, heightForCell: CGFloat = 80.0
        // 一行有多少个cell
        let numForCellInRow: CGFloat = &lt;#T##2#&gt;
        
        // 改变widthForCell、heightForCell
        
        // cell宽度 = (collectionView宽度 - cell最小间距*(cell数量 - 1)）/cell数量 - section的偏移量
        // 如果一行内只显示1个cell，则直接 collectionView.frame.size.width - cell最小间距*2
        widthForCell = (collectionView.frame.size.width - 8*(numForCellInRow - 1))/numForCellInRow - 8
        
        return CGSize(width: widthForCell, height: heightForCell)
    }
    
    // MARK: 初始化Cell
    override func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -&gt; UICollectionViewCell {
        
        let cell: JudyBaseCollectionViewCell = collectionView.dequeueReusableCell(withReuseIdentifier: "cell", for: indexPath)as! JudyBaseCollectionViewCell
        
        cell.json = dataSource[indexPath.row]
        
        return cell
    }
    
    // headerView 高度
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, referenceSizeForHeaderInSection section: Int) -&gt; CGSize {
        var sizeHeight: CGFloat = 0
        switch section {
        case 0:
            sizeHeight = &lt;#T##168#&gt;
        default:
            sizeHeight = &lt;#T##38#&gt;
        }
        // 这里设置宽度无效
        return CGSize(width: 0, height: sizeHeight)
    }
    
    /*
    // 初始化HeaderView和FooterView
    func collectionView(_ collectionView: UICollectionView, viewForSupplementaryElementOfKind kind: String, at indexPath: IndexPath) -&gt; UICollectionReusableView {
        
        if kind == UICollectionElementKindSectionFooter {
            let footerView = collectionView.dequeueReusableSupplementaryView(ofKind: UICollectionElementKindSectionFooter, withReuseIdentifier: "footerView", for: indexPath)
            
            return footerView
        }
        
        let headerView = collectionView.dequeueReusableSupplementaryView(ofKind: UICollectionElementKindSectionHeader, withReuseIdentifier: "headerView", for: indexPath)
        
        return headerView
    }
    */
    
    // MARK: collectionView 代理
    
    override func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        print(indexPath)
        
    }
    
    // 针对Section进行偏移
    override func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, insetForSectionAt section: Int) -&gt; UIEdgeInsets {
        
        return UIEdgeInsetsMake(0, &lt;#T##8#&gt;, 0, &lt;#T##8#&gt;)
    }
    
    // 连续的行或列之间的最小间距
    override func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumLineSpacingForSectionAt section: Int) -&gt; CGFloat {
        
        return 8
    }
    
    // 连续的Cell间的最小间距。这个间距决定了一行内有多少个Cell,但Cell的数量确定后,实际的间距可能会向上调整
    override func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt section: Int) -&gt; CGFloat {
        
        return 8
    }
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>EFBA1A39-C147-47DF-8258-EF65A93F24D9</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string>基本数据源及选中代理</string>
	<key>IDECodeSnippetTitle</key>
	<string>重写collectionView代理</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
